user  www-data;
worker_processes  auto;

# nginx worker の設定
worker_rlimit_nofile  4096; 

error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;



events {
    worker_connections  1024;  # 128より大きくするなら、 5_os にしたがって max connection 数を増やす必要あり（デフォルトで`net.core.somaxconn` が 128 くらいで制限かけられてるので）。さらに大きくするなら worker_rlimit_nofile も大きくする（file descriptor数の制限を緩める)
    # multi_accept on;         # error が出るリスクあり。defaultはoff。
    # accept_mutex_delay 100ms;
}

http {
    default_type  application/octet-stream;

    log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$http_x_forwarded_for"
                "\treq:$request"
                "\tstatus:$status"
                "\tmethod:$request_method"
                "\turi:$request_uri"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tapptime:$upstream_response_time"
                "\tvhost:$host";

    access_log  /var/log/nginx/access.log  ltsv;
    # access_log  off;


    # 基本設定
    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens    off;
    open_file_cache max=100 inactive=65s; # file descriptor のキャッシュ。入れた方が良い。 20s->65s

    # proxy buffer の設定。白金動物園が設定してた。
    proxy_buffers 100 32k;
    proxy_buffer_size 8k;

    # mime.type の設定
    include       /etc/nginx/mime.types;  

    # Keepalive 設定
    # ベンチマークとの相性次第ではkeepalive off;にしたほうがいい
    # keepalive off;
    # ベンチは1分しか回らない
    keepalive_timeout 65;
    keepalive_requests 500;

    # Proxy cache 設定。使いどころがあれば。1mでkey8,000個。1gまでcache。
    proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=zone1:1m max_size=1g inactive=1h;
    proxy_temp_path  /var/cache/nginx/tmp;
    # オリジンから来るCache-Controlを無視する必要があるなら。。。
    #proxy_ignore_headers Cache-Control;

    # unix domain socket 設定1
    # upstream app {
        # server unix:/run/unicorn.sock;  # systemd を使ってると `/tmp` 以下が使えない。appのディレクトリに`tmp`ディレクトリ作って配置する方がpermissionでハマらずに済んで良いかも。
    # }

    server {
        # static file の配信用の root
        root /home/isucon/webapp/public/;

        location ~ .*\.(htm|html|css|js|jpg|png|gif|ico) {
            expires 24h;
            add_header Cache-Control public;

            open_file_cache max=100;  # file descriptor などを cache

            gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
			gzip_types text/css application/javascript application/json font/woff font/ttf image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;

            gzip_disable "msie6";
            gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要
        }
    }

    include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*.conf;
}
